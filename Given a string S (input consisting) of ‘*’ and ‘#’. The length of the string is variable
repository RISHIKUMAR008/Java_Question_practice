Given a string S (input consisting) of ‘*’ and ‘#’. The length of the string is variable. The task is to find the minimum number of ‘*’ or ‘#’ to make it a valid string. The string is considered valid if the number of ‘*’ and ‘#’ are equal. The ‘*’ and ‘#’ can be at any position in the string.
 Note: The output will be a positive or negative integer based on number of ‘*’ and ‘#’ in the input string. 
(*>#): positive integer
 (#>*): negative integer
 (#=*): 0 
Example 1: 
Input 1: ###*** -> Value of S
 Output : 0 → number of * and # are equal














public class ValidString {
    public static int findMinOperations(String S) {
        // Count the number of '*' and '#'
        int countStar = 0, countHash = 0;

        for (char ch : S.toCharArray()) {
            if (ch == '*') {
                countStar++;
            } else if (ch == '#') {
                countHash++;
            }
        }

        // Return the difference between '*' and '#'
        return countStar - countHash;
    }

    public static void main(String[] args) {
        // Example input
        String inputString = "###***";
        int output = findMinOperations(inputString);
        System.out.println("Output: " + output);
    }
}
