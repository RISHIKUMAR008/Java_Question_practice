class Solution {
    public int[] twoSum(int[] numbers, int target) {
        int left = 0;
        int right = numbers.length - 1;

        while (left < right) {
            int sum = numbers[left] + numbers[right];

            if (sum == target) {
                // Since the array is 1-indexed, return indices as left + 1 and right + 1
                return new int[] {left + 1, right + 1};
            } else if (sum < target) {
                left++; // Move the left pointer to the right
            } else {
                right--; // Move the right pointer to the left
            }
        }

        // In case no solution is found (though the problem guarantees a solution)
        return new int[0];
    }

    // Main method for testing
    public static void main(String[] args) {
        Solution solution = new Solution();

        // Example 1
        int[] result1 = solution.twoSum(new int[] {2, 7, 11, 15}, 9);
        System.out.println(java.util.Arrays.toString(result1)); // Output: [1, 2]

        // Example 2
        int[] result2 = solution.twoSum(new int[] {2, 3, 4}, 6);
        System.out.println(java.util.Arrays.toString(result2)); // Output: [1, 3]

        // Example 3
        int[] result3 = solution.twoSum(new int[] {-1, 0}, -1);
        System.out.println(java.util.Arrays.toString(result3)); // Output: [1, 2]
    }
}
