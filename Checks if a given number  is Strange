Explanation:
 * isPrime(int n):
   * Checks if a given number n is prime.
   * Returns true if prime, false otherwise.
 * isStrange(int n):
   * Finds the greatest prime factor of n.
   * Compares the square root of n with the greatest prime factor.
   * Returns true if the square root is less than the greatest prime factor, false otherwise.
 * main(String[] args):
   * Takes input from the user.
   * Calls isStrange() to determine if the number is strange.
   * Prints the result.
This code efficiently determines whether a given number is a strange number based on the provided definition













import java.util.Scanner;

public class StrangeNumber {

    public static boolean isPrime(int n) {
        if (n <= 1) {
            return false;
        }
        for (int i = 2; i <= Math.sqrt(n); i++) {
            if (n % i == 0) {
                return false;
            }
        }
        return true;
    }

    public static boolean isStrange(int n) {
        int greatestPrimeFactor = 1;
        for (int i = 2; i <= n; i++) {
            if (n % i == 0 && isPrime(i)) {
                greatestPrimeFactor = i;
            }
        }
        return Math.sqrt(n) < greatestPrimeFactor;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a number: ");
        int n = scanner.nextInt();

        if (isStrange(n)) {
            System.out.println(n + " is a Strange Number");
        } else {
            System.out.println(n + " is Not a Strange Number");
        }
    }
}
